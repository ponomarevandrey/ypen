.control {
  // make room for control:
  padding-left: 1.5rem;
  margin-bottom: 1rem;
  display: block;

  // hide default &__system-control but keep it accessible
  &__system-control {
    opacity: 0;
    z-index: -1;
    position: absolute;
  }

  &__tip {
    /* 'div' is always a block level element but in case if you will replace 'div' in your markup  with 'span' for example, for such situations just for the sake of safety, we declare 'display: block' */
    display: block;
  }

  // Modifier for the switch:
  &_switch {
    // make room for the switch, cause it is wider than checkbox:
    padding-left: 2.6rem;
  }

  &__label {
    position: relative;
    /* make it not a 'block', but 'inline-block' to prevent it from occupying 100% of the width, creating a blank clickable area to the right of the label text: */
    display: inline-block;

    // define sime common styles for any checkboxes,
    // radio buttons and switches:

    // create the foundation for the future checkbox/radio btn/switch:
    &:before {
      box-sizing: border-box;
      content: '';
      position: absolute;
      display: block;
      top: 0.25rem;
      left: -1.5rem;
      width: 1rem;
      height: 1rem;
      background-color: $color_white;
    }

    // create the foundation for the future
    // radio dot/checkmark//switch circle button:
    &:after {
      box-sizing: border-box;
      content: '';
      position: absolute;
      // by default, hide custrom control dot/checkmark:
      display: none;
      // custrom control dot/checkmark styles:
      left: -1.5rem;
      top: 0.25rem;
      width: 1rem;
      height: 1rem;
    }

    // Modifiers:

    /************
     * Checkbox *
     ************/

    // add custom checkbox styles:
    &_checkbox:before {
      border-radius: 0.25rem;
      border: $form__border_state_initial;
      transition: 0.2s;
    }
    // add custom checkmark styles:
    &_checkbox:after {
      // center/50% means 'to center the image and scale it by 50%':
      background: no-repeat center/50% url('./checkmark.svg');
    }

    /****************
     * Radio button *
     ****************/

    // add custom radio button styles:
    &_radio:before {
      border-radius: 50%;
      border: $form__border_state_initial;
      transition: 0.2s;
    }
    // add custom dot styles:
    &_radio:after {
      border-radius: 50%;
      // center/40% means 'to center the image and scale it by 40%':
      background: no-repeat center/38% url('./dot.svg');
    }

    /**********
     * Switch *
     **********/

    // add custom switch styles:
    &_switch:before {
      top: 0.25rem;
      left: -2.6rem; // = .control_switch's padding-left value
      background-color: $color_white;
      transition: 0.4s;
      border: $form__border_state_initial;
      border-radius: 10000px;
      width: 2rem;
      height: 1rem;
    }
    // add switch button styles:
    &_switch:after {
      display: block;
      /* height = height of switch - 2px (for borders) - 2px (for the gap between the button and the switch container) */
      height: calc(1rem - 4px);
      // same logic goes for width
      width: calc(1rem - 4px);
      // left = &_switch:before's 'left' property + 2px (2px is for border)
      left: calc(-2.6rem + 2px);
      // top = &_switch:before's 'top' property + 2px (2px is for border)
      top: calc(0.25rem + 2px);
      background-color: $color_black;
      border-radius: 50%;
      transition: all 0.4s ease;
      z-index: 10000;
    }
  }

  /*************************************
   * default modifiers (when checked): *
   *************************************/

  // show the checkmark/dot:
  &__system-control:checked ~ &__label:after {
    display: block;
  }
  // style control:
  &__system-control:checked ~ &__label:before {
    background-color: $color_black;
  }
  // and after__ it is deselected:
  &__system-control:focus ~ &__label:before {
    box-shadow: $form__box-shadow_state_initial;
  }
  // modifier for switch to override some of the beforementioned rules:
  // show the checkmark:
  &__system-control:checked ~ &__label_switch:after {
    background-color: white;
    left: calc(-1.6rem + 2px);
  }
  // style control:
  &__system-control:checked ~ &__label_switch:before {
    background-color: $color_black;
  }

  /***************
   * _validation *
   ***************/

  // on error:

  &__system-control_validation:checked ~ &__label:before {
    background-color: $color_success;
  }

  &__system-control_validation ~ &__label {
    color: $color_danger;
  }
  &__system-control_validation ~ &__label:before {
    border: $form__border_state_danger;
  }
  &__system-control_validation:focus ~ &__label {
    color: $color_danger;
  }
  &__system-control_validation:focus ~ &__label:before {
    box-shadow: $form__box-shadow_state_danger;
    border: $form__border_state_danger;
  }
  // modifier for__switch:
  &__system-control_validation ~ &__label_switch:after {
    background-color: $color_danger;
  }

  // on success:

  // style control:
  &__system-control_validation:checked ~ &__label:before {
    background-color: $color_success;
  }
  &__system-control_validation:checked ~ &__label {
    color: $color_success;
  }
  &__system-control_validation:checked:focus ~ &__label:before {
    box-shadow: $form__box-shadow_state_success;
    background-color: $color_success;
  }
  &__system-control_validation:checked ~ &__label:before {
    border: $form__border_state_success;
  }
  &__system-control_validation ~ &__tip {
    color: $color_danger;
  }
  &__system-control_validation:checked ~ &__tip {
    display: none;
  }

  /*************
   * _disabled *
   *************/

  &__system-control_disabled ~ &__label,
  &__system-control_disabled ~ &__tip {
    outline: none;
    opacity: 0.4;
    cursor: not-allowed;
  }
}
